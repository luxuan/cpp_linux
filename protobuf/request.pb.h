// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef PROTOBUF_request_2eproto__INCLUDED
#define PROTOBUF_request_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_request_2eproto();
void protobuf_AssignDesc_request_2eproto();
void protobuf_ShutdownFile_request_2eproto();

class Request;

enum Request_CMD {
  Request_CMD_SET = 1,
  Request_CMD_GET = 2,
  Request_CMD_INCR = 3
};
bool Request_CMD_IsValid(int value);
const Request_CMD Request_CMD_CMD_MIN = Request_CMD_SET;
const Request_CMD Request_CMD_CMD_MAX = Request_CMD_INCR;
const int Request_CMD_CMD_ARRAYSIZE = Request_CMD_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_CMD_descriptor();
inline const ::std::string& Request_CMD_Name(Request_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_CMD_descriptor(), value);
}
inline bool Request_CMD_Parse(
    const ::std::string& name, Request_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_CMD>(
    Request_CMD_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_CMD CMD;
  static const CMD SET = Request_CMD_SET;
  static const CMD GET = Request_CMD_GET;
  static const CMD INCR = Request_CMD_INCR;
  static inline bool CMD_IsValid(int value) {
    return Request_CMD_IsValid(value);
  }
  static const CMD CMD_MIN =
    Request_CMD_CMD_MIN;
  static const CMD CMD_MAX =
    Request_CMD_CMD_MAX;
  static const int CMD_ARRAYSIZE =
    Request_CMD_CMD_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CMD_descriptor() {
    return Request_CMD_descriptor();
  }
  static inline const ::std::string& CMD_Name(CMD value) {
    return Request_CMD_Name(value);
  }
  static inline bool CMD_Parse(const ::std::string& name,
      CMD* value) {
    return Request_CMD_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Request.CMD cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::Request_CMD cmd() const;
  inline void set_cmd(::Request_CMD value);

  // required uint64 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Request)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 uid_;
  int cmd_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// required .Request.CMD cmd = 1;
inline bool Request::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::Request_CMD Request::cmd() const {
  // @@protoc_insertion_point(field_get:Request.cmd)
  return static_cast< ::Request_CMD >(cmd_);
}
inline void Request::set_cmd(::Request_CMD value) {
  assert(::Request_CMD_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:Request.cmd)
}

// required uint64 uid = 2;
inline bool Request::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 Request::uid() const {
  // @@protoc_insertion_point(field_get:Request.uid)
  return uid_;
}
inline void Request::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:Request.uid)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Request_CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Request_CMD>() {
  return ::Request_CMD_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_2eproto__INCLUDED
